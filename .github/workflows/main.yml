name: main branch deployment

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  BUILD_NUMBER: ${{ github.run_number }}
  DROPLET_IP: 138.197.25.111  # Replace with your DigitalOcean Droplet IP address
  SSH_KEY: ${{ secrets.DROPLET_SSH_KEY }}  # Your DigitalOcean SSH private key secret name

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build --no-cache -t sumit-api:latest -f Dockerfile .

      - name: Tag Docker image with Docker Hub username
        run: |
          docker tag sumit-api:latest ${{ env.DOCKER_USERNAME }}/sumit-api:latest

      - name: Push Docker image with 'latest' tag
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/sumit-api:latest

      - name: Tag Docker image with build number
        run: |
          docker tag sumit-api:latest ${{ env.DOCKER_USERNAME }}/sumit-api:${{ env.BUILD_NUMBER }}
          docker push ${{ env.DOCKER_USERNAME }}/sumit-api:${{ env.BUILD_NUMBER }}

      - name: Deploy to DigitalOcean Droplet
        env:
          DROPLET_SSH_KEY: ${{ secrets.DROPLET_SSH_KEY }}  # Your SSH key for the droplet
        run: |
          # Create a temporary SSH key file
          echo "${{ env.DROPLET_SSH_KEY }}" > /tmp/droplet_key
          chmod 600 /tmp/droplet_key  # Set the correct permissions

          # Connect to the DigitalOcean droplet
          ssh -o StrictHostKeyChecking=no -i /tmp/droplet_key root@${{ env.DROPLET_IP }} << 'EOF'
            # Pull the latest Docker image
            docker pull ${{ env.DOCKER_USERNAME }}/sumit-api:latest
            
            # Stop and remove the old container (if it exists)
            docker stop sumit || true
            docker rm sumit || true
            
            # Run the new container
            docker run -d --name sumit -p 3000:3000 ${{ env.DOCKER_USERNAME }}/sumit-api:latest
            
            # Optionally, clean up old images
            docker image prune -f
          EOF

          # Clean up the temporary key file
          rm /tmp/droplet_key

